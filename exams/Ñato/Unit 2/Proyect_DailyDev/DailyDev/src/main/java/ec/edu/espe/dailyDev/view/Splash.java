/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.espe.dailyDev.view;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Olivier Paspuel
 */
public class Splash extends javax.swing.JFrame {

    /**
     * Creates new form Splash
     */
    private Color mTransp;
    private Point mPoint;

    public Splash() {
        mTransp = new Color(0, 0, 0, 0);
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setBackground(mTransp);
        ImageDecore mBG = new ImageDecore(bgPnl, "/imgs/dailyDevTBG.png");
        bgPnl.add(mBG).repaint();
        bgPnl.setOpaque(false);
        bgPnl.setBorder(null);
        bgPnl.setBackground(mTransp);
        progressBarBeg();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPnl = new javax.swing.JPanel();
        pbCharge = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(550, 550));
        setSize(new java.awt.Dimension(550, 550));

        bgPnl.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bgPnlMouseDragged(evt);
            }
        });
        bgPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgPnlMousePressed(evt);
            }
        });

        pbCharge.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout bgPnlLayout = new javax.swing.GroupLayout(bgPnl);
        bgPnl.setLayout(bgPnlLayout);
        bgPnlLayout.setHorizontalGroup(
            bgPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgPnlLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(pbCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );
        bgPnlLayout.setVerticalGroup(
            bgPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgPnlLayout.createSequentialGroup()
                .addContainerGap(278, Short.MAX_VALUE)
                .addComponent(pbCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bgPnlMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgPnlMousePressed
        mPoint = evt.getPoint();
        getComponentAt(mPoint);
    }//GEN-LAST:event_bgPnlMousePressed

    private void bgPnlMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgPnlMouseDragged
        int currentX = this.getLocation().x;
        int currentY = this.getLocation().y;
        int moveX = (currentX + evt.getX()) - (currentX + mPoint.x);
        int moveY = (currentY + evt.getY()) - (currentY + mPoint.y);

        int x = currentX + moveX;
        int y = currentY + moveY;
        this.setLocation(x, y);
    }//GEN-LAST:event_bgPnlMouseDragged

    private void progressBarBeg() {
        Timer mTimer = new Timer(45, (ActionEvent e) -> {
            pbCharge.setValue(pbCharge.getValue() + 1);
            pbCharge.setBackground(Color.orange);
            pbCharge.setStringPainted(true);
            pbCharge.setString("Loading " + pbCharge.getValue() + "%");
        });
        mTimer.start();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater
        Runnable mRun = (() -> {
            Splash splash = new Splash();
            splash.setVisible(true);
            try {
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                Logger.getLogger(Splash.class.getName()).log(Level.SEVERE, null, ex);
            }
            splash.dispose();
            FrmLogin login = new FrmLogin();
            login.setVisible(true);
            
        });
        Thread mThreadSplash = new Thread(mRun);
        mThreadSplash.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgPnl;
    private javax.swing.JProgressBar pbCharge;
    // End of variables declaration//GEN-END:variables
}
