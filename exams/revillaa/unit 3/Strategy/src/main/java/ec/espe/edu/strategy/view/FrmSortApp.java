package ec.espe.edu.strategy.view;

import com.google.gson.Gson;
import com.mongodb.MongoException;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.result.InsertOneResult;
import ec.espe.edu.strategy.controller.DbManager;
import ec.espe.edu.strategy.model.SortApp;
import ec.espe.edu.strategy.model.SortingContext;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JTextArea;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author Antonio Revilla
 */
public class FrmSortApp extends javax.swing.JFrame {

    public static DbManager dbManager;
    public static SortApp sortApp;

    /**
     * Creates new form SortApp1
     */
    public FrmSortApp() {
        connectMongoDB();
        initComponents();
        sortapp();

    }

    private void sortapp() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOrdered = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSaveAndExit = new javax.swing.JButton();
        Numbers = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("STRATEGY PATTERN");

        jLabel3.setText("Unordered random array:");

        jLabel4.setText("Ordered random array:");

        txtOrdered.setText("..");

        jLabel2.setText("7");

        btnSaveAndExit.setText("Save and Exit");
        btnSaveAndExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAndExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(btnSaveAndExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrdered, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(Numbers, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Numbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtOrdered)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnSaveAndExit)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveAndExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAndExitActionPerformed
            dbManager = new DbManager();
    String uri = "mongodb+srv://revillaa:antonio@cluster0.xk5nmbc.mongodb.net/?retryWrites=true&w=majority";
    MongoClient mongoClient = MongoClients.create(uri);
    MongoDatabase database = mongoClient.getDatabase("FinalExam");

    String numbersInput = Numbers.getText();
    int[] data = parseInputNumbers(numbersInput);
    
    if (data != null) {
        SortingContext sc = new SortingContext();
        int[] unordered = Arrays.copyOf(data, data.length);
        int[] ordered = Arrays.copyOf(data, data.length);
        sc.sort(ordered);

        txtOrdered.setText(Arrays.toString(ordered));

        saveDataToMongoDB(data);

        this.dispose();
    }
    }//GEN-LAST:event_btnSaveAndExitActionPerformed

    private int[] parseInputNumbers(String input) {
        try {
            String[] inputNumbers = input.split(",\\s*"); 
            int[] data = new int[inputNumbers.length];

            for (int i = 0; i < inputNumbers.length; i++) {
                data[i] = Integer.parseInt(inputNumbers[i]);
            }

            return data;
        } catch (NumberFormatException e) {
            System.err.println("Invalid input: Please enter comma-separated numbers.");
            return null;  // Return null if parsing fails
        }
    }

    private void saveDataToMongoDB(int[] data) {
        if (sortApp == null) {
            sortApp = new SortApp();
        }

        sortApp.setUnordered(Arrays.copyOf(data, data.length));
        sortApp.setOrdered(data); 

        Gson gson = new Gson();
        String jsonSortApp = gson.toJson(sortApp);

        try {
            MongoCollection<Document> collection = dbManager.getDatabase().getCollection("Numbers");
            Document document = Document.parse(jsonSortApp);
            collection.insertOne(document);
            System.out.println("Datos guardados correctamente en la base de datos.");
        } catch (MongoException me) {
            System.err.println("Error al intentar guardar los datos: " + me);
        }
    }

    public static void connectMongoDB() {
        dbManager = new DbManager();
        String uri = "mongodb+srv://revillaa:antonio@cluster0.xk5nmbc.mongodb.net/?retryWrites=true&w=majority/";
        String dataBaseName = "FinalExam";
        dbManager.connect(uri, dataBaseName);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSortApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSortApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSortApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSortApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSortApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Numbers;
    private javax.swing.JButton btnSaveAndExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel txtOrdered;
    // End of variables declaration//GEN-END:variables
}
